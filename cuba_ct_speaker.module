<?php

/**
 * Implements hook_form_alter().
 */
function cuba_ct_speaker_form_alter(&$form, &$form_state, $form_id) {

  // If on the speaker form add description to title for full name.
  if ($form_id == 'node_cuba_ct_speaker_form' || $form_id == 'node_cuba_ct_speaker_form') {

    $form['title']['widget'][0]['value']['#description'] =  \Drupal\Core\Field\FieldFilteredMarkup::create('Enter the full name of the speaker.');
  }
}

function cuba_ct_speaker_preprocess_paragraph(&$variables) {

  if ($variables['paragraph']->getType() == 'cuba_pt_speakers') {

    $current_path = \Drupal::service('path.current')->getPath();
    $current_path_exploded = explode ('/', $current_path);

    if (in_array('add', $current_path_exploded) || in_array('edit', $current_path_exploded)) {

      $tid = $variables['paragraph']->get('field_cuba_para_sp_conference')->getValue()[0]['target_id'];

      $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($tid);

      $language = \Drupal::languageManager()->getCurrentLanguage()->getName();

      $conference = $term->getName() . ' ' . $language;

      $build = [
        '#theme' => 'cuba_speakers',
        '#conference' => $conference,
      ];

      $variables['content'] = $build;
    }

    //dpm('HERE');
  }
}

/**
 * Implements hook_theme().
 */
function cuba_ct_speaker_theme($existing, $type, $theme, $path) {
  return [
    'cuba_speakers' => [
      'variables' => [
        'conference' => NULL,
      ],
      'path' => drupal_get_path('module', 'cuba_ct_speaker') . '/templates',
    ],
  ];
}
